

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 14 17:31:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _LATAbits	set	3977
    48  0000                     _TRISAbits	set	3986
    49  0000                     _OSCCON	set	4051
    50  0000                     _ADCON1	set	4033
    51                           
    52                           ; #config settings
    53  0000                     
    54                           	psect	cinit
    55  007F00                     __pcinit:
    56                           	opt callstack 0
    57  007F00                     start_initialization:
    58                           	opt callstack 0
    59  007F00                     __initialization:
    60                           	opt callstack 0
    61  007F00                     end_of_initialization:
    62                           	opt callstack 0
    63  007F00                     __end_of__initialization:
    64                           	opt callstack 0
    65  007F00  0100               	movlb	0
    66  007F02  EF83  F03F         	goto	_main	;jump to C main() function
    67                           
    68                           	psect	cstackCOMRAM
    69  000001                     __pcstackCOMRAM:
    70                           	opt callstack 0
    71  000001                     ?___awdiv:
    72                           	opt callstack 0
    73  000001                     ___awdiv@dividend:
    74                           	opt callstack 0
    75                           
    76                           ; 2 bytes @ 0x0
    77  000001                     	ds	2
    78  000003                     ___awdiv@divisor:
    79                           	opt callstack 0
    80                           
    81                           ; 2 bytes @ 0x2
    82  000003                     	ds	2
    83  000005                     ___awdiv@counter:
    84                           	opt callstack 0
    85                           
    86                           ; 1 bytes @ 0x4
    87  000005                     	ds	1
    88  000006                     ___awdiv@sign:
    89                           	opt callstack 0
    90                           
    91                           ; 1 bytes @ 0x5
    92  000006                     	ds	1
    93  000007                     ___awdiv@quotient:
    94                           	opt callstack 0
    95                           
    96                           ; 2 bytes @ 0x6
    97  000007                     	ds	2
    98  000009                     Delay@ms:
    99                           	opt callstack 0
   100                           
   101                           ; 2 bytes @ 0x8
   102  000009                     	ds	2
   103  00000B                     ??_Delay:
   104                           
   105                           ; 1 bytes @ 0xA
   106  00000B                     	ds	1
   107  00000C                     Delay@x:
   108                           	opt callstack 0
   109                           
   110                           ; 2 bytes @ 0xB
   111  00000C                     	ds	2
   112  00000E                     
   113                           ; 1 bytes @ 0xD
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 24 in file "Led.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called:    2
   139 ;; This function calls:
   140 ;;		_Delay
   141 ;; This function is called by:
   142 ;;		Startup code after reset
   143 ;; This function uses a non-reentrant model
   144 ;;
   145                           
   146                           	psect	text0
   147  007F06                     __ptext0:
   148                           	opt callstack 0
   149  007F06                     _main:
   150                           	opt callstack 29
   151                           
   152                           ;Led.c: 26:     for(int x = 0; x < ms; x++)
   153                           
   154                           ;incstack = 0
   155  007F06  0E0F               	movlw	15
   156  007F08  6EC1               	movwf	4033,c	;volatile
   157                           
   158                           ;Led.c: 27:     {
   159  007F0A  0E47               	movlw	71
   160  007F0C  6ED3               	movwf	4051,c	;volatile
   161                           
   162                           ;Led.c: 30: }
   163  007F0E  9A92               	bcf	3986,5,c	;volatile
   164  007F10                     l822:
   165                           
   166                           ;Led.c: 33: ;Led.c: 34: 
   167  007F10  8A89               	bsf	3977,5,c	;volatile
   168                           
   169                           ;Led.c: 35: 
   170  007F12  0E03               	movlw	3
   171  007F14  6E0A               	movwf	Delay@ms+1,c
   172  007F16  0EE8               	movlw	232
   173  007F18  6E09               	movwf	Delay@ms,c
   174  007F1A  EC97  F03F         	call	_Delay	;wreg free
   175                           
   176                           ;Led.c: 36: 
   177  007F1E  9A89               	bcf	3977,5,c	;volatile
   178                           
   179                           ;Led.c: 37: 
   180  007F20  0E03               	movlw	3
   181  007F22  6E0A               	movwf	Delay@ms+1,c
   182  007F24  0EE8               	movlw	232
   183  007F26  6E09               	movwf	Delay@ms,c
   184  007F28  EC97  F03F         	call	_Delay	;wreg free
   185  007F2C  D7F1               	goto	l822
   186  007F2E                     __end_of_main:
   187                           	opt callstack 0
   188                           
   189 ;; *************** function _Delay *****************
   190 ;; Defined at:
   191 ;;		line 42 in file "Led.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;  ms              2    8[COMRAM] int 
   194 ;; Auto vars:     Size  Location     Type
   195 ;;  x               2   11[COMRAM] int 
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   205 ;;      Params:         2       0       0       0       0       0       0       0       0
   206 ;;      Locals:         2       0       0       0       0       0       0       0       0
   207 ;;      Temps:          1       0       0       0       0       0       0       0       0
   208 ;;      Totals:         5       0       0       0       0       0       0       0       0
   209 ;;Total ram usage:        5 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; Hardware stack levels required when called:    1
   212 ;; This function calls:
   213 ;;		___awdiv
   214 ;; This function is called by:
   215 ;;		_main
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text1
   220  007F2E                     __ptext1:
   221                           	opt callstack 0
   222  007F2E                     _Delay:
   223                           	opt callstack 29
   224                           
   225                           ;incstack = 0
   226  007F2E  C009  F001         	movff	Delay@ms,___awdiv@dividend
   227  007F32  C00A  F002         	movff	Delay@ms+1,___awdiv@dividend+1
   228  007F36  0E00               	movlw	0
   229  007F38  6E04               	movwf	___awdiv@divisor+1,c
   230  007F3A  0E0A               	movlw	10
   231  007F3C  6E03               	movwf	___awdiv@divisor,c
   232  007F3E  ECBE  F03F         	call	___awdiv	;wreg free
   233  007F42  C001  F009         	movff	?___awdiv,Delay@ms
   234  007F46  C002  F00A         	movff	?___awdiv+1,Delay@ms+1
   235  007F4A  0E00               	movlw	0
   236  007F4C  6E0D               	movwf	Delay@x+1,c
   237  007F4E  0E00               	movlw	0
   238  007F50  6E0C               	movwf	Delay@x,c
   239  007F52  D009               	goto	l23
   240  007F54                     l814:
   241  007F54  0E04               	movlw	4
   242  007F56  6E0B               	movwf	??_Delay& (0+255),c
   243  007F58  0E3E               	movlw	62
   244  007F5A                     u157:
   245  007F5A  2EE8               	decfsz	wreg,f,c
   246  007F5C  D7FE               	bra	u157
   247  007F5E  2E0B               	decfsz	??_Delay& (0+255),f,c
   248  007F60  D7FC               	bra	u157
   249  007F62  4A0C               	infsnz	Delay@x,f,c
   250  007F64  2A0D               	incf	Delay@x+1,f,c
   251  007F66                     l23:
   252  007F66  5009               	movf	Delay@ms,w,c
   253  007F68  5C0C               	subwf	Delay@x,w,c
   254  007F6A  500D               	movf	Delay@x+1,w,c
   255  007F6C  0A80               	xorlw	128
   256  007F6E  6E0B               	movwf	??_Delay& (0+255),c
   257  007F70  500A               	movf	Delay@ms+1,w,c
   258  007F72  0A80               	xorlw	128
   259  007F74  580B               	subwfb	??_Delay& (0+255),w,c
   260  007F76  B0D8               	btfsc	status,0,c
   261  007F78  0012               	return	
   262  007F7A  D7EC               	goto	l814
   263  007F7C                     __end_of_Delay:
   264                           	opt callstack 0
   265                           
   266 ;; *************** function ___awdiv *****************
   267 ;; Defined at:
   268 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;  dividend        2    0[COMRAM] int 
   271 ;;  divisor         2    2[COMRAM] int 
   272 ;; Auto vars:     Size  Location     Type
   273 ;;  quotient        2    6[COMRAM] int 
   274 ;;  sign            1    5[COMRAM] unsigned char 
   275 ;;  counter         1    4[COMRAM] unsigned char 
   276 ;; Return value:  Size  Location     Type
   277 ;;                  2    0[COMRAM] int 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   285 ;;      Params:         4       0       0       0       0       0       0       0       0
   286 ;;      Locals:         4       0       0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0
   288 ;;      Totals:         8       0       0       0       0       0       0       0       0
   289 ;;Total ram usage:        8 bytes
   290 ;; Hardware stack levels used:    1
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_Delay
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text2
   299  007F7C                     __ptext2:
   300                           	opt callstack 0
   301  007F7C                     ___awdiv:
   302                           	opt callstack 29
   303                           
   304                           ;incstack = 0
   305  007F7C  0E00               	movlw	0
   306  007F7E  6E06               	movwf	___awdiv@sign,c
   307  007F80  AE04               	btfss	___awdiv@divisor+1,7,c
   308  007F82  D006               	goto	l774
   309  007F84  6C03               	negf	___awdiv@divisor,c
   310  007F86  1E04               	comf	___awdiv@divisor+1,f,c
   311  007F88  B0D8               	btfsc	status,0,c
   312  007F8A  2A04               	incf	___awdiv@divisor+1,f,c
   313  007F8C  0E01               	movlw	1
   314  007F8E  6E06               	movwf	___awdiv@sign,c
   315  007F90                     l774:
   316  007F90  AE02               	btfss	___awdiv@dividend+1,7,c
   317  007F92  D006               	goto	l780
   318  007F94  6C01               	negf	___awdiv@dividend,c
   319  007F96  1E02               	comf	___awdiv@dividend+1,f,c
   320  007F98  B0D8               	btfsc	status,0,c
   321  007F9A  2A02               	incf	___awdiv@dividend+1,f,c
   322  007F9C  0E01               	movlw	1
   323  007F9E  1A06               	xorwf	___awdiv@sign,f,c
   324  007FA0                     l780:
   325  007FA0  0E00               	movlw	0
   326  007FA2  6E08               	movwf	___awdiv@quotient+1,c
   327  007FA4  0E00               	movlw	0
   328  007FA6  6E07               	movwf	___awdiv@quotient,c
   329  007FA8  5003               	movf	___awdiv@divisor,w,c
   330  007FAA  1004               	iorwf	___awdiv@divisor+1,w,c
   331  007FAC  B4D8               	btfsc	status,2,c
   332  007FAE  D01C               	goto	l802
   333  007FB0  0E01               	movlw	1
   334  007FB2  6E05               	movwf	___awdiv@counter,c
   335  007FB4  D004               	goto	l788
   336  007FB6                     l786:
   337  007FB6  90D8               	bcf	status,0,c
   338  007FB8  3603               	rlcf	___awdiv@divisor,f,c
   339  007FBA  3604               	rlcf	___awdiv@divisor+1,f,c
   340  007FBC  2A05               	incf	___awdiv@counter,f,c
   341  007FBE                     l788:
   342  007FBE  AE04               	btfss	___awdiv@divisor+1,7,c
   343  007FC0  D7FA               	goto	l786
   344  007FC2                     u110:
   345  007FC2  90D8               	bcf	status,0,c
   346  007FC4  3607               	rlcf	___awdiv@quotient,f,c
   347  007FC6  3608               	rlcf	___awdiv@quotient+1,f,c
   348  007FC8  5003               	movf	___awdiv@divisor,w,c
   349  007FCA  5C01               	subwf	___awdiv@dividend,w,c
   350  007FCC  5004               	movf	___awdiv@divisor+1,w,c
   351  007FCE  5802               	subwfb	___awdiv@dividend+1,w,c
   352  007FD0  A0D8               	btfss	status,0,c
   353  007FD2  D005               	goto	l798
   354  007FD4  5003               	movf	___awdiv@divisor,w,c
   355  007FD6  5E01               	subwf	___awdiv@dividend,f,c
   356  007FD8  5004               	movf	___awdiv@divisor+1,w,c
   357  007FDA  5A02               	subwfb	___awdiv@dividend+1,f,c
   358  007FDC  8007               	bsf	___awdiv@quotient,0,c
   359  007FDE                     l798:
   360  007FDE  90D8               	bcf	status,0,c
   361  007FE0  3204               	rrcf	___awdiv@divisor+1,f,c
   362  007FE2  3203               	rrcf	___awdiv@divisor,f,c
   363  007FE4  2E05               	decfsz	___awdiv@counter,f,c
   364  007FE6  D7ED               	goto	u110
   365  007FE8                     l802:
   366  007FE8  5006               	movf	___awdiv@sign,w,c
   367  007FEA  B4D8               	btfsc	status,2,c
   368  007FEC  D004               	goto	l806
   369  007FEE  6C07               	negf	___awdiv@quotient,c
   370  007FF0  1E08               	comf	___awdiv@quotient+1,f,c
   371  007FF2  B0D8               	btfsc	status,0,c
   372  007FF4  2A08               	incf	___awdiv@quotient+1,f,c
   373  007FF6                     l806:
   374  007FF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   375  007FFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   376  007FFE  0012               	return		;funcret
   377  008000                     __end_of___awdiv:
   378                           	opt callstack 0
   379  0000                     
   380                           	psect	rparam
   381  0000                     tosu	equ	0xFFF
   382                           tosh	equ	0xFFE
   383                           tosl	equ	0xFFD
   384                           stkptr	equ	0xFFC
   385                           pclatu	equ	0xFFB
   386                           pclath	equ	0xFFA
   387                           pcl	equ	0xFF9
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           prodh	equ	0xFF4
   393                           prodl	equ	0xFF3
   394                           indf0	equ	0xFEF
   395                           postinc0	equ	0xFEE
   396                           postdec0	equ	0xFED
   397                           preinc0	equ	0xFEC
   398                           plusw0	equ	0xFEB
   399                           fsr0h	equ	0xFEA
   400                           fsr0l	equ	0xFE9
   401                           wreg	equ	0xFE8
   402                           indf1	equ	0xFE7
   403                           postinc1	equ	0xFE6
   404                           postdec1	equ	0xFE5
   405                           preinc1	equ	0xFE4
   406                           plusw1	equ	0xFE3
   407                           fsr1h	equ	0xFE2
   408                           fsr1l	equ	0xFE1
   409                           bsr	equ	0xFE0
   410                           indf2	equ	0xFDF
   411                           postinc2	equ	0xFDE
   412                           postdec2	equ	0xFDD
   413                           preinc2	equ	0xFDC
   414                           plusw2	equ	0xFDB
   415                           fsr2h	equ	0xFDA
   416                           fsr2l	equ	0xFD9
   417                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay
    _Delay->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     673
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     673
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      D       D       1       13.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 14 17:31:45 2019

                     l23 7F66             ___awdiv@sign 0006                      l802 7FE8  
                    l806 7FF6                      l814 7F54                      l822 7F10  
                    l780 7FA0                      l774 7F90                      l786 7FB6  
                    l788 7FBE                      l798 7FDE                      u110 7FC2  
                    u157 7F5A                      wreg 000FE8                     _main 7F06  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 8000          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _Delay 7F2E                    status 000FD8          __initialization 7F00  
           __end_of_main 7F2E                   ??_main 000E            __activetblptr 000000  
                 ?_Delay 0009                   _ADCON1 000FC1         ___awdiv@dividend 0001  
                 Delay@x 000C                   _OSCCON 000FD3                ??___awdiv 0005  
       ___awdiv@quotient 0007               __accesstop 0060  __end_of__initialization 7F00  
          ___rparam_used 000001            __end_of_Delay 7F7C           __pcstackCOMRAM 0001  
                ??_Delay 000B                  Delay@ms 0009                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7F7C                  __pcinit 7F00  
                __ramtop 0800                  __ptext0 7F06                  __ptext1 7F2E  
                __ptext2 7F7C     end_of_initialization 7F00                _TRISAbits 000F92  
    start_initialization 7F00                 ?___awdiv 0001           __size_of_Delay 004E  
               _LATAbits 000F89                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084    __CFG_FOSC$INTOSCIO_EC 000000            __size_of_main 0028  
